# Binary-search

Q:4 Given a sorted array of integers A where every element appears twice except for one element which appears once, find and return this single element that appears only once.

NOTE: Users are expected to solve this in O(log(N)) time.
public class Solution {
    public int solve(int[] A) {

int n=A.length;
int l=0;
int r=n-1;
if(A[0]!=A[1])
{
    return A[0];
}
if(A[n-1]!=A[n-2])
{
    return A[n-1];
}
if(n==1)
{
    return A[0];
}
while(l<=r)
{
    int mid=l+(r-l)/2;

    if(A[mid]!=A[mid-1] && A[mid]!=A[mid+1])
    {
        return A[mid];
    }
    if(A[mid]==A[mid-1])
    {
        mid=mid-1;
    }
    if(mid%2==0)
    {
        l=mid+2;
    }
    else
    {
        r=mid-1;
    }

}
return -1;



    }
}
